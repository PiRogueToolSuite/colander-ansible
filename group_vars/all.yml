docker_rootless: true
docker_disable_root_daemon: true
use_docker_compose: true
docker_host: 'unix:///var/run/docker.sock'
docker_socket_path: '/var/run/docker.sock'
colander_installation_path: '/home/{{ ansible_user }}/colander'
docker_volumes_path: '/home/{{ ansible_user }}/colander/volumes'
dot_env_files_dir: .envs
compose_file_template: no-sso.yml.j2
compose_file: docker-compose.yml

flavor:
  use_mandolin: '{{ stack_overrides.flavor.use_mandolin | default(True)}}'
  use_threatr: '{{ stack_overrides.flavor.use_threatr | default(True)}}'
  use_cyberchef: '{{ stack_overrides.flavor.use_cyberchef | default(True)}}'
  use_playwright: '{{ stack_overrides.flavor.use_playwright | default(True)}}'

stack:
  base:
    dot_env_file: .base
    environment:
      - USE_DOCKER=True
      - COLANDER_BASE_URL={{ colander_vault.colander_base_url }}
      - THREATR_BASE_URL={{ colander_vault.threatr_base_url }}
      - CYBERCHEF_BASE_URL={{ colander_vault.cyberchef_base_url }}
      - ACME_EMAIL={{ colander_vault.acme_email }}
      - ADMIN_NAME={{ colander_vault.admin_name }}
      - ADMIN_EMAIL={{ colander_vault.admin_email }}
      - DJANGO_DEFAULT_FROM_EMAIL={{ colander_vault.django_default_from_email }}
      - EMAIL_HOST={{ colander_vault.email_host }}
      - EMAIL_HOST_USER={{ colander_vault.email_host_user }}
      - EMAIL_HOST_PASSWORD={{ colander_vault.email_host_password }}
      - EMAIL_PORT={{ colander_vault.email_port }}
      - EMAIL_USE_TLS={{ colander_vault.email_use_tls }}
      - EMAIL_USE_SSL={{ colander_vault.email_use_ssl }}
      - LICENSE_ENABLED=True
      - USE_MANDOLIN={{ flavor.use_mandolin }}
      - USE_CYBERCHEF={{ flavor.use_cyberchef }}
      - USE_THREATR={{ flavor.use_threatr }}
      - USE_PLAYWRIGHT={{ flavor.use_playwright }}
  services:
    traefik:
      version: v3.2.2
      volumes:
        config: '{{ docker_volumes_path }}/traefik'
        logs: '{{ docker_volumes_path }}/traefik-logs'
      vars:
        acme_email: '{{ colander_vault.acme_email }}'
        colander_fqdn: '{{ colander_vault.colander_fqdn }}'
        threatr_fqdn: '{{ colander_vault.threatr_fqdn }}'
        cyberchef_fqdn: '{{ colander_vault.cyberchef_fqdn }}'
        enable_dashboard: true
    minio:
      version: RELEASE.2022-09-22T18-57-27Z
      dot_env_file: .minio
      volumes:
        data: '{{ docker_volumes_path }}/minio'
      environment:
        - MINIO_ACCESS_KEY={{ colander_vault.minio_access_key }}
        - MINIO_SECRET_KEY={{ colander_vault.minio_secret_key }}
    watchtower:
      version: latest
      environment:
        - WATCHTOWER_POLL_INTERVAL=3600
    colander:
      version: '{{ stack_overrides.services.colander.version | default("main")}}'
      dot_env_file: .colander
      environment:
        - REDIS_URL=redis://redis:6379/0
        - DJANGO_SECURE_SSL_REDIRECT=False
        - DJANGO_ACCOUNT_ALLOW_REGISTRATION=False
        - DJANGO_SETTINGS_MODULE=config.settings.production
        - WEB_CONCURRENCY=4
        - DJANGO_ALLOWED_HOSTS={{ colander_vault.colander_django_allowed_hosts }}
        - DJANGO_SECRET_KEY={{ colander_vault.colander_django_secret_key }}
        - DJANGO_ADMIN_URL={{ colander_vault.colander_django_admin_url }}
    colander_postgres:
      volumes:
        data: '{{ docker_volumes_path }}/colander-db'
        backups: '{{ docker_volumes_path }}/colander-db-backups'
      dot_env_file: .colander-postgres
      environment:
        - POSTGRES_HOST=colander-postgres
        - POSTGRES_PORT=5432
        - POSTGRES_DB=colander
        - POSTGRES_USER={{ colander_vault.colander_postgres_user }}
        - POSTGRES_PASSWORD={{ colander_vault.colander_postgres_password }}
        # Used by pg_ready, see the healthcheck in the docker compose file
        - PGDATABASE=colander
        - PGUSER={{ colander_vault.colander_postgres_user }}
    threatr:
      version: '{{ stack_overrides.services.threatr.version | default("main")}}'
      dot_env_file: .threatr
      environment:
        - REDIS_URL=redis://redis:6379/0
        - DJANGO_SECURE_SSL_REDIRECT=false
        - WEB_CONCURRENCY=4
        - DJANGO_SETTINGS_MODULE=config.settings.production
        - DJANGO_ACCOUNT_ALLOW_REGISTRATION=False
        - DJANGO_ALLOWED_HOSTS={{ colander_vault.threatr_django_allowed_hosts }}
        - DJANGO_SECRET_KEY={{ colander_vault.threatr_django_secret_key }}
        - DJANGO_ADMIN_URL={{ colander_vault.threatr_django_admin_url }}
    threatr_postgres:
      volumes:
        data: '{{ docker_volumes_path }}/threatr-db'
        backups: '{{ docker_volumes_path }}/threatr-db-backups'
      dot_env_file: .threatr-postgres
      environment:
        - POSTGRES_HOST=threatr-postgres
        - POSTGRES_PORT=5432
        - POSTGRES_DB=threatr
        - POSTGRES_USER={{ colander_vault.threatr_postgres_user }}
        - POSTGRES_PASSWORD={{ colander_vault.threatr_postgres_password }}
        # Used by pg_ready, see the healthcheck in the docker compose file
        - PGDATABASE=threatr
        - PGUSER={{ colander_vault.threatr_postgres_user }}
    mandolin:
      version: main
    tika:
      version: 3.0.0.0-full
    cyberchef:
      version: latest
    playwright:
      version: main
    elasticsearch:
      volumes:
        data: '{{ docker_volumes_path }}/elasticsearch'
        snapshots: '{{ docker_volumes_path }}/elasticsearch-snapshots'
      version: 8.4.1
      xmx: '{{ stack_overrides.services.elasticsearch.xmx | default("2048m")}}'
      xms: '{{ stack_overrides.services.elasticsearch.xms | default("2048m")}}'

