log:
  level: ERROR
  filePath: "/logs/error.log"

accessLog:
  filePath: "/logs/access.log"
  bufferingSize: 100

{% if stack.services.traefik.vars.enable_dashboard %}
api: {}
{% endif %}

entryPoints:
  web:
    # http
    address: ":80"
    http:
      # https://docs.traefik.io/routing/entrypoints/#entrypoint
      redirections:
        entryPoint:
          to: web-secure

  web-secure:
    # https
    address: ":443"

certificatesResolvers:
  letsencrypt:
    # https://docs.traefik.io/master/https/acme/#lets-encrypt
    acme:
      email: "{{ stack.services.traefik.vars.acme_email }}"
      storage: /etc/traefik/acme/acme.json
      # https://docs.traefik.io/master/https/acme/#httpchallenge
      httpChallenge:
        entryPoint: web

http:
  routers:
{% if stack.services.traefik.vars.enable_dashboard %}
    web-secure-traefik-dashboard:
      rule: "Host(`{{ stack.services.traefik.vars.traefik_fqdn }}`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      service: api@internal
      entryPoints:
        - web-secure
      middlewares:
        - auth
      tls:
        certResolver: letsencrypt
{% endif %}
    web-secure-colander:
      rule: "Host(`{{ stack.services.traefik.vars.colander_fqdn }}`)"
      entryPoints:
        - web-secure
      middlewares:
        - compress-http
        - csrf
      service: colander
      tls:
        certResolver: letsencrypt
{% if flavor.use_threatr %}
    web-secure-threatr:
      rule: "Host(`{{ stack.services.traefik.vars.threatr_fqdn }}`)"
      entryPoints:
        - web-secure
      middlewares:
        - compress-http
        - csrf
      service: threatr
      tls:
        certResolver: letsencrypt
{% endif %}
{% if flavor.use_cyberchef %}
    web-secure-cyberchef:
      rule: "Host(`{{ stack.services.traefik.vars.cyberchef_fqdn }}`)"
      entryPoints:
        - web-secure
      middlewares:
        - compress-http
        - csrf
      service: cyberchef
      tls:
        certResolver: letsencrypt
{% endif %}
  middlewares:
{% if stack.services.traefik.vars.enable_dashboard %}
    auth:
      basicAuth:
        users:
          - "{{ colander_vault.traefik_admin_user }}:{{ colander_vault.traefik_admin_password | ansible.builtin.password_hash('bcrypt', rounds=4, salt=colander_vault.traefik_auth_salt) }}"  
{% endif %}
    compress-http:
      # https://doc.traefik.io/traefik/middlewares/http/compress/
      compress: true
    csrf:
      # https://docs.traefik.io/master/middlewares/headers/#hostsproxyheaders
      # https://docs.djangoproject.com/en/dev/ref/csrf/#ajax
      headers:
        hostsProxyHeaders: ["X-CSRFToken"]

  services:
    colander:
      loadBalancer:
        servers:
          - url: http://colander-front:5000
{% if flavor.use_threatr %}
    threatr:
      loadBalancer:
        servers:
          - url: http://threatr-front:5000
{% endif %}
{% if flavor.use_cyberchef %}
    cyberchef:
      loadBalancer:
        servers:
          - url: http://cyberchef:8000
{% endif %}

providers:
  # https://docs.traefik.io/master/providers/file/
  file:
    filename: /etc/traefik/traefik.yml
    watch: true
