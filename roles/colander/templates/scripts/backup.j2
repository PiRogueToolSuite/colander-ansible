#!/usr/bin/env bash

set -o errexit
set -o pipefail
set -o nounset

# Backup temporary locations
# - colander database: {{ stack.services.colander_postgres.volumes.backups }}
# - threatr database: {{ stack.services.threatr_postgres.volumes.backups }}
# - elasticsearch: {{ stack.services.elasticsearch.volumes.data }}/backups
# - minio: {{ stack.services.minio.volumes.data }}/backups

backup_storage_path="{{ docker_backup_path }}"
backup_dir="${backup_storage_path}/$(date +'%Y_%m_%d-%H_%M_%S')"

# Create the backup storage structure
mkdir -p ${backup_dir}/colander-db
mkdir -p ${backup_dir}/threatr-db
mkdir -p ${backup_dir}/minio
mkdir -p ${backup_dir}/elasticsearch

# Backup Postgres databases
colander_db_volume_path="{{ stack.services.colander_postgres.volumes.backups }}"
rm -rf ${colander_db_volume_path}/*
docker compose -f "{{ colander_installation_path }}/{{ compose_file }}" run --rm colander-postgres backup
mv ${colander_db_volume_path}/* ${backup_dir}/colander-db
rm -rf ${colander_db_volume_path}/*
{% if flavor.use_threatr %}
threatr_db_volume_path="{{ stack.services.threatr_postgres.volumes.backups }}"
rm -rf ${threatr_db_volume_path}/*
docker compose -f "{{ colander_installation_path }}/{{ compose_file }}" run --rm threatr-postgres backup
mv ${threatr_db_volume_path}/* ${backup_dir}/threatr-db
rm -rf ${threatr_db_volume_path}/*
{% endif %}

# Backup Minio
minio_backup_name="minio-$(date +'%Y_%m_%d-%H_%M_%S')"
minio_volume_path="{{ stack.services.minio.volumes.data }}"

cd ${minio_volume_path}
tar czf ${backup_dir}/minio/${minio_backup_name}.tgz local-media/
cd -
echo "Minio backup '${minio_backup_name}.tgz' has been created and placed in '${backup_dir}/minio'."

# Create ElasticSearch snapshot
es_backup_name="elasticsearch-$(date +'%Y_%m_%d-%H_%M_%S')"
es_volume_path="{{ stack.services.elasticsearch.volumes.data }}"

docker compose -f "{{ colander_installation_path }}/{{ compose_file }}" exec -T elasticsearch /bin/bash << EOF
curl -s --request DELETE 'http://localhost:9200/_snapshot/snapshots'
rm -rf /usr/share/elasticsearch/data/snapshots/*
curl -s -X PUT http://localhost:9200/_snapshot/snapshots -H "Content-Type: application/json" -d '
 {
    "type": "fs",
    "settings": {
        "location": "/usr/share/elasticsearch/data/snapshots",
        "compress": true
    }
 }
'
curl -s -X PUT 'http://localhost:9200/_snapshot/snapshots/${es_backup_name}?wait_for_completion=true' 
EOF
cd ${es_volume_path}/snapshots/
tar czf ${backup_dir}/elasticsearch/${es_backup_name}.tgz *
cd -

echo "Elasticsearch backup '${es_backup_name}.tgz' has been created and placed in '${backup_dir}/elasticsearch'."