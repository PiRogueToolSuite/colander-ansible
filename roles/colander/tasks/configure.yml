---
- name: Ensures the installation dir exists
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - '{{ colander_installation_path }}'
    - '{{ docker_volumes_path }}'
    - '{{ docker_backup_path }}'
    - '{{ colander_installation_path }}/.envs'
    - '{{ colander_installation_path }}/scripts'
    - '{{ colander_installation_path }}/compose/traefik'
    - '{{ colander_installation_path }}/compose/postgres'

- name: Ensures the volume directories exist
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - '{{ stack.services.traefik.volumes.config }}'
    - '{{ stack.services.traefik.volumes.logs }}'
    - '{{ stack.services.minio.volumes.data }}'
    - '{{ stack.services.colander_postgres.volumes.data }}'
    - '{{ stack.services.colander_postgres.volumes.backups }}'
    - '{{ stack.services.threatr_postgres.volumes.data }}'
    - '{{ stack.services.threatr_postgres.volumes.backups }}'
    - '{{ stack.services.elasticsearch.volumes.data }}'

- name: Generate Docker Compose file
  become: false
  ansible.builtin.template:
    src: './templates/{{ compose_file_template }}'
    dest: '{{ colander_installation_path }}/{{ compose_file }}'
    mode: '0644'
    force: true
  register: configuration

- name: Copy Postgres scripts
  become: false
  ansible.builtin.copy:
    src: './files/postgres'
    dest: '{{ colander_installation_path }}/compose/'
    force: true

- name: Copy backup script
  become: false
  ansible.builtin.template:
    src: './templates/scripts/backup.j2'
    dest: '{{ colander_installation_path }}/scripts/backup'
    force: true
    mode: 0744

- name: Copy restore script
  become: false
  ansible.builtin.template:
    src: './templates/scripts/restore.j2'
    dest: '{{ colander_installation_path }}/scripts/restore'
    force: true
    mode: 0744

- name: Generate services configuration
  become: false
  ansible.builtin.template:
    src: '{{ item.src }}'
    dest: '{{ item.dest }}'
    mode: '0644'
    force: true
  loop:
    - {
      src: './templates/traefik/Dockerfile.j2',
      dest: '{{ colander_installation_path }}/compose/traefik/Dockerfile'
    }
    - {
      src: './templates/traefik/traefik.yml.j2',
      dest: '{{ colander_installation_path }}/compose/traefik/traefik.yml'
    }
    - {
      src: './templates/postgres/Dockerfile.j2',
      dest: '{{ colander_installation_path }}/compose/postgres/Dockerfile'
    }

- name: Generate .env files
  become: false
  ansible.builtin.template:
    src: './templates/dot_env_file.j2'
    dest: '{{ colander_installation_path }}/{{ dot_env_files_dir }}/{{ item.dot_env_file }}'
    mode: '0644'
    force: true
  with_items:
    - '{{ stack.base }}'
    - '{{ stack.services.minio }}'
    - '{{ stack.services.colander }}'
    - '{{ stack.services.colander_postgres }}'
    - '{{ stack.services.threatr }}'
    - '{{ stack.services.threatr_postgres }}'

